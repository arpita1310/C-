class Solution {
public:
     ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* ans = new ListNode();
        ListNode* temp=ans;
        while(list1!=NULL and list2!=NULL){
            if(list1->val<=list2->val){
                ans->next=new ListNode(list1->val);
                list1=list1->next;
            }
            else{
                ans->next = new ListNode(list2->val);
                list2=list2->next;
            }
            ans=ans->next;
        }
        if(list1!=NULL){
            ans->next=list1;
        }
        if(list2!=NULL){
            ans->next=list2;
        }
        return temp->next;
    }


    ListNode* sortList(ListNode* head) {
        if(head==NULL || head->next==NULL) return head;
        ListNode *temp=NULL;
        ListNode *slow=head;
        ListNode *fast=head;
        while(fast!=NULL && fast->next!=NULL){
            temp=slow;
            slow=slow->next;
            fast=fast->next->next;
        }
        temp->next=NULL;
        ListNode *l1=sortList(head);
        ListNode *l2=sortList(slow);
        ListNode *h= mergeTwoLists(l1,l2);
        return h;
    }
    

};
